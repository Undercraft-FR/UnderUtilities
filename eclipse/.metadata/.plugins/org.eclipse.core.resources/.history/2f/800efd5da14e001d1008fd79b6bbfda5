package fr.skhr.loyto.UnderUtilities.proxy;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.util.HashMap;

import javax.imageio.ImageIO;

import cpw.mods.fml.client.registry.RenderingRegistry;
import fr.skhr.loyto.UnderUtilities.client.UnderRenderPlayer;
import fr.skhr.loyto.UnderUtilities.common.UnderUtilities;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.texture.DynamicTexture;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.ResourceLocation;

public class ClientProxy extends CommonProxy {

	//Cache skin
	public HashMap<String, ResourceLocation> dlCache = new HashMap<String, ResourceLocation>();
	public static HashMap<String, ResourceLocation> cacheSkin = new HashMap<String, ResourceLocation>();
	
	public void registerRender()
    {
		RenderingRegistry.registerEntityRenderingHandler(EntityPlayer.class, new UnderRenderPlayer());
    }
	
	public static ResourceLocation getSkinLocation(String name) {
		
		if(!cacheSkin.containsKey(name)) {
			//return Minecraft.getMinecraft().renderEngine.getDynamicTextureLocation("", new DynamicTexture(UnderUtilities.test));
			return new ResourceLocation("textures/entity/steve.png");
		}
		
		return cacheSkin.get(name);
	}
}

class HeadDownloader implements Runnable {
	HashMap<String, BufferedImage> dlCache;
	HashMap<String, BufferedImage> headCache;
	String name;
	
	public HeadDownloader(String name, HashMap<String, BufferedImage> dlCache, HashMap<String, BufferedImage> headCache) {
		this.name = name;
		this.dlCache = dlCache;
		this.skinCache = headCache;
	}
	
	public void run() {
		dlCache.put(name, null);
		BufferedImage headImage = null;
		try {
			URL url = new URL("https://www.undercraft.fr/api/skin-api/avatars/face/%player%".replace("%player%", name));
			headImage = ImageIO.read(url.openStream());
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		BufferedImage merged = new BufferedImage(64, 64, 2);
		BufferedImage face = headImage.getSubimage(0, 0, 64, 64);
		Graphics g = merged.getGraphics();
		g.drawImage(face, 0, 0, null);
		
		headCache.put(name, merged);
		dlCache.remove(name);
	}
}
