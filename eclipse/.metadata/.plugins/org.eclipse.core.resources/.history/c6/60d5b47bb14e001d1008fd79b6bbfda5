package fr.skhr.loyto.UnderUtilities.common;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.imageio.ImageIO;

import org.lwjgl.opengl.GL11;

import cpw.mods.fml.common.eventhandler.SubscribeEvent;
import cpw.mods.fml.common.gameevent.PlayerEvent.PlayerLoggedInEvent;
import cpw.mods.fml.common.gameevent.PlayerEvent.PlayerLoggedOutEvent;
import cpw.mods.fml.common.network.FMLNetworkEvent.ClientDisconnectionFromServerEvent;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import fr.skhr.loyto.UnderUtilities.client.UnderRenderPlayer;
import fr.skhr.loyto.UnderUtilities.proxy.ClientProxy;
import net.minecraft.client.Minecraft;
import net.minecraft.client.entity.AbstractClientPlayer;
import net.minecraft.client.entity.EntityClientPlayerMP;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.client.gui.Gui;
import net.minecraft.client.gui.GuiIngame;
import net.minecraft.client.gui.GuiPlayerInfo;
import net.minecraft.client.network.NetHandlerPlayClient;
import net.minecraft.client.renderer.entity.RenderManager;
import net.minecraft.client.renderer.texture.DynamicTexture;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.player.EntityPlayerMP;
import net.minecraft.scoreboard.ScorePlayerTeam;
import net.minecraft.scoreboard.Team;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.event.RenderGameOverlayEvent;
import net.minecraftforge.client.event.RenderPlayerEvent;
import net.minecraftforge.event.entity.EntityJoinWorldEvent;

public class UnderUtilitiesEventHandler {
	//Cote serveur
	
	@SubscribeEvent
	public void onPlayerLoggedIn(PlayerLoggedInEvent event) {
		//String msg = "header:" + UnderUtilities.header + ";footer:" + UnderUtilities.footer;
		
		String msg = "conf[tab|header:" + serverMessage.encode(UnderUtilities.header) + ";footer:" + serverMessage.encode(UnderUtilities.footer);
		
		UnderUtilities.network.sendTo(new serverMessage(msg), (EntityPlayerMP) event.player);
	}
	
	@SubscribeEvent
	public void onPlayerLoggedOut(PlayerLoggedOutEvent event) {
		System.out.println("deco");
		String msg = "cache[remove:" + serverMessage.encode(event.player.getDisplayName());
		UnderUtilities.network.sendToAll(new serverMessage(msg));
	}
	
	//Cote client
	//Cache des skins
	public static HashMap<String, BufferedImage> dlCache = new HashMap();
	public static HashMap<String, BufferedImage> headCache = new HashMap();
	
	@SubscribeEvent
	public void onRenderGameOverlay(RenderGameOverlayEvent.Pre event) {
		if (event.type == RenderGameOverlayEvent.ElementType.PLAYER_LIST) {
			ClientProxy.tabRender(event)
		}
	}
	
	@SubscribeEvent
	public void onClientDisconnectionFromServer(ClientDisconnectionFromServerEvent event) {
		dlCache = new HashMap<String, BufferedImage>();
		headCache = new HashMap<String, BufferedImage>();

		ClientProxy.dlSkinCache = new HashMap<String, BufferedImage>();
		ClientProxy.skinCache = new HashMap<String, ResourceLocation>();
	}
}

class HeadDownloader implements Runnable {
	HashMap<String, BufferedImage> dlCache;
	HashMap<String, BufferedImage> headCache;
	String name;
	
	public HeadDownloader(String name, HashMap<String, BufferedImage> dlCache, HashMap<String, BufferedImage> headCache) {
		this.name = name;
		this.dlCache = dlCache;
		this.headCache = headCache;
	}
	
	public void run() {
		dlCache.put(name, null);
		BufferedImage headImage = null;
		try {
			URL url = new URL("https://www.undercraft.fr/api/skin-api/avatars/face/%player%".replace("%player%", name));
			headImage = ImageIO.read(url.openStream());
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		BufferedImage merged = new BufferedImage(64, 64, 2);
		BufferedImage face = headImage.getSubimage(0, 0, 64, 64);
		Graphics g = merged.getGraphics();
		g.drawImage(face, 0, 0, null);
		
		headCache.put(name, merged);
		dlCache.remove(name);
	}
}
