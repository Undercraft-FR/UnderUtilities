package fr.skhr.loyto.UnderUtilities.common;

import java.awt.image.BufferedImage;
import java.util.HashMap;

import cpw.mods.fml.common.eventhandler.SubscribeEvent;
import cpw.mods.fml.common.gameevent.PlayerEvent.PlayerLoggedInEvent;
import cpw.mods.fml.common.gameevent.PlayerEvent.PlayerLoggedOutEvent;
import cpw.mods.fml.common.network.FMLNetworkEvent.ClientConnectedToServerEvent;
import cpw.mods.fml.common.network.FMLNetworkEvent.ClientDisconnectionFromServerEvent;
import fr.skhr.loyto.UnderUtilities.proxy.ClientProxy;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.player.EntityPlayerMP;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.event.RenderGameOverlayEvent;

public class UnderUtilitiesEventHandler {
	//Cote serveur
	
	@SubscribeEvent
	public void onPlayerLoggedIn(PlayerLoggedInEvent event) {
		String msg = "conf[tab|header:" + serverMessage.encode(UnderUtilities.header) + ";footer:" + serverMessage.encode(UnderUtilities.footer);
		
		UnderUtilities.network.sendTo(new serverMessage(msg), (EntityPlayerMP) event.player);
	}
	
	@SubscribeEvent
	public void onPlayerLoggedOut(PlayerLoggedOutEvent event) {
		String msg = "cache[remove:" + serverMessage.encode(event.player.getDisplayName());
		UnderUtilities.network.sendToAll(new serverMessage(msg));
	}
	
	//Cote client
	
	@SubscribeEvent
	public void onRenderGameOverlay(RenderGameOverlayEvent.Pre event) {
		if (event.type == RenderGameOverlayEvent.ElementType.PLAYER_LIST) {
			ClientProxy.tabRender(event);
		} else if(event.type == RenderGameOverlayEvent.ElementType.CHAT) {
			event.setCanceled(true);
			System.out.println(Minecraft.getMinecraft().getNetHandler().getNetworkManager().getSocketAddress().toString())
		}
	}
	
	@SubscribeEvent
	public void onClientDisconnectionFromServer(ClientDisconnectionFromServerEvent event) {
		ClientProxy.dlHeadCache = new HashMap<String, BufferedImage>();
		ClientProxy.headCache = new HashMap<String, BufferedImage>();

		ClientProxy.dlSkinCache = new HashMap<String, BufferedImage>();
		ClientProxy.skinCache = new HashMap<String, ResourceLocation>();
		
		UnderUtilities.chat = null;
	}
}
